name: C/C++ CI

on: [pull_request, push]
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: windows-latest
    env:
      AUTOBUILD_VSVER: 120
      PreferredToolArchitecture: x64
      VIEWER_CHANNEL: FirestormVR-GUI
      VIEWER_VERSION_REVISION: 58205
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        clean: false

    - name: Set VIEWER_VERSION_GITHASH
      shell: bash
      run: |
        majorVer=`cat indra/newview/VIEWER_VERSION.txt | cut -d "." -f 1`
        minorVer=`cat indra/newview/VIEWER_VERSION.txt | cut -d "." -f 2`
        patchVer=`cat indra/newview/VIEWER_VERSION.txt | cut -d "." -f 3`
        echo ::set-env name=VIEWER_VERSION_STR::${majorVer}.${minorVer}.${patchVer}.${VIEWER_VERSION_REVISION}
        git log -n 1
        git log -n 1 | grep "Merge " | awk '{ print $2 }' || true
        echo ::set-env name=VIEWER_VERSION_GITHASH::$(git log -n 1 | grep "Merge " | awk '{ print $2 }' | xargs git rev-parse --short || git rev-parse --short HEAD)

    - name: Set env
      shell: cmd
      run: |
        echo ::set-env name=AUTOBUILD_ID::-
        echo ::set-env name=AUTOBUILD_INSTALLABLE_CACHE::%cd%\autobuild-cache
        echo ::set-env name=AUTOBUILD_VARIABLES_FILE::%cd%\fs-build-variables\variables

    - name: vs2013packagecache
      id: vs2013packagecache
      uses: actions/cache@v2
      with:
        path: "C:/ProgramData/Package Cache"
        key: ${{ runner.os }}-vs2013packagecache-xx

    # - name: vs2013layout
    #   id: vs2013layout
    #   uses: actions/cache@v2
    #   with:
    #     path: c:/vs2013layout
    #     key: ${{ runner.os }}-vs2013layout

    - name: check disk space
      run: df -h

    - name: vs_community.exe preflight
      if: false
      shell: cmd
      run: |
        echo HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\VisualStudio\Setup
        reg query HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\VisualStudio\Setup || cd .
        echo HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\VisualStudio\Setup
        reg query HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\VisualStudio\Setup || cd .
        echo HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\Setup
        reg query HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\Setup || cd .
        echo c:\vs2013
        dir c:\vs2013 || cd .
        echo c:\vs2013layout
        dir c:\vs2013layout || cd .
        echo c:\vs2013cache
        dir c:\vs2013cache || cd .
        echo c:\vs2013cache
        mkdir c:\vs2013cache || cd .
        echo reg KeepDownloadedPayloads = 1
        reg add HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\Setup /f /v KeepDownloadedPayloads /t REG_DWORD /d 1
        echo reg CachePath = c:\vs2013cache
        reg add HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\Setup /f /v CachePath /d c:\vs2013cache
        reg query HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\Setup

    - name: download vs_community.exe
      shell: powershell
      run: wget -O vs_community.exe http://download.microsoft.com/download/7/1/B/71BA74D8-B9A0-4E6C-9159-A8335D54437E/vs_community.exe

    - name: rename package cache
      if: steps.vs2013packagecache.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        @echo on
        icacls "C:\ProgramData" /grant %username%:(OI)(CI)F
        icacls "C:\ProgramData\Package Cache" /grant %username%:(OI)(CI)F
        rename "C:\ProgramData\Package Cache" "Package_Cache_old"
        mkdir "C:\ProgramData\Package Cache"

    - name: install vs_community.exe
      shell: cmd
      run: |
        echo on
        dir vs_community.exe
        reg add HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\Setup /f /v KeepDownloadedPayloads /t REG_DWORD /d 1
        echo "%cd%\vs_community.exe" /silent /passive /norestart /custominstallpath "c:\vs2013" /adminfile "%cd%\.github\vs2013community.xml" /log "%cd%\vs2013-.log"
        "%cd%\vs_community.exe" /silent /passive /norestart /custominstallpath "c:\vs2013" /adminfile "%cd%\.github\vs2013community.xml" /log "%cd%\vs2013-.log"
        echo vs2013packagecache >> vs2013-files.txt
        rmdir /s /q "C:\ProgramData\Package Cache\.unverified"
        dir "C:\ProgramData\Package Cache" >> vs2013-files.txt
        echo vs2013layout >> vs2013-files.txt
        dir c:\vs2013layout || cd . >> vs2013-files.txt
        echo vs2013 >> vs2013-files.txt
        dir "c:\vs2013" || cd . >> vs2013-files.txt
        icacls "C:\ProgramData\Package Cache" /grant %username%:(OI)(CI)F /T /Q

    - name: check disk space
      run: df -h

    - name: VS2013 Community checks
      shell: cmd
      run: |
        call "c:\vs2013\VC\vcvarsall.bat" amd64
        cl.exe
        which msbuild.exe
        msbuild.exe -version

    - name: disabled
      if: false
      shell: cmd
      run: |
        REM "%cd%\vs_community.exe" /silent /passive /norestart /layout "c:\vs2013layout" /custominstallpath "c:\vs2013" /adminfile "%cd%\scripts\vs2013community.xml" /log "%cd%\vs2013-.log"
        "%cd%\vs_community.exe" /createadminfile "%cd%\vs2013community.xml" || cd .
        type "%cd%\vs2013community.xml" || cd .

    - name: Get software versions please
      shell: cmd
      run: |
        call "c:\vs2013\VC\vcvarsall.bat" amd64
        cmake --version
        git --version
        python --version
        cl.exe

    - name: Install autobuild through PIP
      if: false
      run: pip install git+https://vcs.firestormviewer.org/autobuild-1.1#egg=autobuild

    - name: Get autobuild version
      if: false
      run: autobuild --version
 
    - name: cache -- autobuild downloaded installables
      if: false
      id: cacheddownloads
      uses: actions/cache@v2
      with:
        path: autobuild-cache
        key: ${{ runner.os }}-cacheddownloads-${{ hashFiles('autobuild.xml') }}-${{ env.VIEWER_CHANNEL }}

    - name: Configure autobuild
      if: false
      shell: cmd
      run: |
        call "c:\vs2013\VC\vcvarsall.bat" amd64
        autobuild configure -A 64 -c ReleaseFS_open -- --package --openal --chan ${{env.VIEWER_CHANNEL}} -DLL_TESTS:BOOL=FALSE -DVS_DISABLE_FATAL_WARNINGS=ON

    - name: Build & Package
      if: false
      shell: cmd
      run: |
        call "c:\vs2013\VC\vcvarsall.bat" amd64
        msbuild build-vc120-64/Firestorm.sln /target:llpackage /property:Configuration=Release;Platform=x64 /maxcpucount /detailedsummary

    - uses: actions/upload-artifact@v2
      if: true || ${{ failure() }}
      with:
        name: ${{runner.os}}-vs2013-artifacts
        path: vs2013-*

    - uses: actions/upload-artifact@v2
      if: startsWith(runner.os, 'windows')
      with:
        name: ${{runner.os}}-${{env.VIEWER_CHANNEL}}-${{env.VIEWER_VERSION_STR}}-${{env.VIEWER_VERSION_GITHASH}}
        path: build-vc120-64/newview/Release/*_Setup.exe

name: CompileWindows

on: [pull_request]

defaults:
  run:
    shell: bash

jobs:
  windows_build:
    runs-on: windows-latest
    env:
      # FSVS_TARGET: 'Visual Studio 16 2019'
      AUTOBUILD_VSVER: 140
      PreferredToolArchitecture: x64
      VIEWER_CHANNEL: FirestormVR-GHA
      VIEWER_VERSION_REVISION: 62831
      VCTargetsPath: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set VIEWER_VERSION_GITHASH
      shell: bash
      run: |
        majorVer=`cat indra/newview/VIEWER_VERSION.txt | cut -d "." -f 1`
        minorVer=`cat indra/newview/VIEWER_VERSION.txt | cut -d "." -f 2`
        patchVer=`cat indra/newview/VIEWER_VERSION.txt | cut -d "." -f 3`
        echo VIEWER_VERSION_STR=${majorVer}.${minorVer}.${patchVer}.${VIEWER_VERSION_REVISION} >> $GITHUB_ENV
        echo VIEWER_VERSION_GITHASH=$(git log -n 1 | grep "Merge " | awk '{ print $2 }' | xargs git rev-parse --short || git rev-parse --short HEAD) >> $GITHUB_ENV
    - name: Set env
      shell: cmd
      run: |
        echo AUTOBUILD_ID=- >> %GITHUB_ENV%
        echo AUTOBUILD_VARIABLES_FILE=%cd%\fs-build-variables\variables >> %GITHUB_ENV%
        echo AUTOBUILD_INSTALLABLE_CACHE=%cd%\autobuild-cache >> %GITHUB_ENV%
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: 2.7
        architecture: x64
    - name: install vs2017 community
      shell: cmd
      run: |
        choco install visualstudio2017community
        choco install visualstudio2017-workload-nativedesktop
        echo C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin >> %GITHUB_PATH%
    - name: Get software versions please
      shell: cmd
      run: |
        cmake --version
        git --version
        python --version
        call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\amd64\vcvars64.bat"
        cl.exe
        MSBuild.exe -version
    - name: Install autobuild through PIP
      run: pip install git+https://github.com/humbletim/autobuild-1.1#egg=autobuild

    - name: cache -- autobuild downloaded installables
      id: cacheddownloads
      uses: actions/cache@v2
      with:
        path: autobuild-cache
        key: ${{ runner.os }}-cacheddownloads-${{ hashFiles('autobuild.xml') }}-${{ env.VIEWER_CHANNEL }}

    - name: Configure autobuild
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\amd64\vcvars64.bat"
        autobuild --version
        autobuild configure -A 64 -c ReleaseFS_open -- --package --openal --chan ${{env.VIEWER_CHANNEL}} -DLL_TESTS:BOOL=FALSE
    - name: Build & Package
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\amd64\vcvars64.bat"
        msbuild build-vc${{env.AUTOBUILD_VSVER}}-64/Firestorm.sln /target:llpackage /property:Configuration=Release;Platform=x64 /maxcpucount
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows-${{env.VIEWER_CHANNEL}}-${{env.VIEWER_VERSION_STR}}-${{env.VIEWER_VERSION_GITHASH}}
        path: build-vc${{env.AUTOBUILD_VSVER}}-64/newview/Release/*_Setup.exe
